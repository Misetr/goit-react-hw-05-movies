{"version":3,"file":"static/js/633.db33e9cd.chunk.js","mappings":"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","sources":["hooks/useHttp.jsx","../node_modules/nanoid/index.browser.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const useHttp = (fn, params) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getData = async () => {\n      setLoading(true);\n      try {\n        const result = await fn(params);\n        setData(result);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getData();\n  }, [fn, params]);\n  return { data, error, loading };\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import { useHttp } from 'hooks/useHttp';\nimport { nanoid } from 'nanoid';\nimport React, { Suspense, useRef } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { styled } from 'styled-components';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n\n  const { data } = useHttp(getMovieDetails, id);\n  const { original_title, overview, poster_path, release_date, genres } = data;\n  const location = useLocation();\n  const goBackRef = useRef(location.state?.from || '/');\n\n  return (\n    <StyledWrapper style={{ padding: '0 20px' }}>\n      <Link to={goBackRef.current}>Go back</Link>\n      <div>\n        <img\n          width={280}\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={original_title}\n        />\n        <h2>\n          {original_title} {`(${release_date?.slice(0, 4)})`}\n        </h2>\n        <h2>Overview:</h2>\n        <p>{overview}</p>\n        <h2>Genres:</h2>\n        <p key={nanoid()}>\n          {genres?.map(genre => (\n            <span>{` ${genre.name} `}</span>\n          ))}\n        </p>\n        <hr />\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <hr />\n      </div>\n      <Suspense fallback={<h2>Loading...</h2>}>\n        <Outlet />\n      </Suspense>\n    </StyledWrapper>\n  );\n};\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NDM1OGZmZWM3YzYyYzU2NGFkNGVhZWIwYTg0NzUxZCIsInN1YiI6IjY1MGI0NmNmNTAxY2YyMDBjNmJiYzQ0ZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.wvamPmbpdrrLWGlyfoVdDeyUlAy0z5h3P12zVjSMD-0',\n  },\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(\n    'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n    options\n  );\n \n  return data.results;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n \n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n    options\n  );\n \n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n    options\n  );\n  \n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n    options\n  );\n  \n  return data.results;\n};\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n"],"names":["useHttp","fn","params","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","getData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","sent","t0","message","finish","stop","apply","arguments","nanoid","size","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","StyledWrapper","styled","_templateObject","_taggedTemplateLiteral","_location$state","useParams","getMovieDetails","original_title","overview","poster_path","release_date","genres","location","useLocation","goBackRef","useRef","state","from","_jsxs","style","padding","children","_jsx","Link","to","current","width","src","concat","alt","slice","map","genre","name","Suspense","fallback","Outlet","options","headers","accept","Authorization","getTrending","_yield$axios$get","axios","abrupt","results","searchMovies","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getMovieCredits","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","getMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}